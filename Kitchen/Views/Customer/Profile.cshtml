@model Kitchen.ViewModel.ProfileViewModel

@{
    ViewData["Title"] = "Profile";
}

<h1>Customer Profile</h1>
<hr />

<div class="mb-4">
    <h4>Customer Information</h4>
    <dl class="row">
        <dt class="col-sm-3">Name</dt>
        <dd class="col-sm-9">@Model.customerName</dd>
        <dt class="col-sm-3">Address</dt>
        <dd class="col-sm-9">@Model.customerAddress</dd>
        <dt class="col-sm-3">Phone</dt>
        <dd class="col-sm-9">@Model.customerPhone</dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-controller="Account">Edit Info</a>
</div>

<h4>Order History</h4>
@if (Model.Orders != null && Model.Orders.Any())
{
    foreach (var order in Model.Orders)
    {
        <div class="card mb-4">
            <div class="card-header">
                <strong>Order @order.Id</strong> - @order.Date.ToShortDateString() - <span class="badge bg-info text-dark">@order.Status</span>
            </div>
            <div class="card-body">
                <p><strong>Total Price:</strong> @order.TotalPrice.ToString("C")</p>
                @if (order.Status == "Pending")
                {
                    <form asp-controller="Order" asp-action="UpdateOrderStatus" method="post" class="mb-3">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="orderId" value="@order.Id" />
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle"></i> Mark as Delivered
                        </button>
                    </form>
                }
                @if (order.OrderDetails != null && order.OrderDetails.Any())
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Dish</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Subtotal</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in order.OrderDetails)
                            {
                                <tr>
                                    <td>@(detail.Dish != null ? detail.Dish.Name : "N/A")</td>
                                    <td>@detail.Price.ToString("F2")</td>
                                    <td>@detail.Quantity</td>
                                    <td>@(detail.Price * detail.Quantity)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>No order details.</p>
                }
            </div>
        </div>
    }
}
else
{
    <p>No orders found.</p>
}

<div>
    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
